---
# TODO: define test-setup as selectable via parameter
# urgent todo: update more cfg-files to be installed....
- name: add fhem-group
  group:
    name: fhem

- name: add fhem-user
  user:
    name: fhem
    group: fhem
    groups: fhem,dialout
    shell: /bin/bash
    home: /home/fhem
# Enabele with ansible 2.6 (currently 2.5 in ubuntu... sigh); workaround: usermod -L fhem on commandline
    password_lock: yes

- name: Disable ipv6 for now to avoid networking issues
  sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: '1'
    sysctl_set: yes

- name: create various directories for mount
  file:
    path: "{{ item.path }}"
    state: directory
    owner: fhem
    group: fhem
    mode: 0755
  with_items:
    - { path: "/opt/automnt" }
    - { path: "/home/fhem/.ssh" }

- name: do package-install basic update for dpkg
  shell: dpkg --admindir=/var/lib/dpkg --update-avail <(apt-cache dumpavail)
  args:
    executable: /bin/bash

- name: copy predefined packages to fhempi
  copy:
    src: "fhem_set_selection"
    dest: "/root/fhem_set_selection"

- name: prepare pre-defined install packages
  shell: dpkg --set-selections < /root/fhem_set_selection
  args:
    executable: /bin/bash

- name: install pre-defined install packages
  shell: "apt-get -u -y dselect-upgrade"
  args:
    executable: /bin/bash

- name: copy various files to fhempi
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: preserve
  with_items:
    - { src: "auto.nfs", dest: "/etc/auto.nfs" }
    - { src: "id_rsa.pub", dest: "/home/fhem/.ssh/id_rsa.pub" }
    - { src: "id_rsa", dest: "/home/fhem/.ssh/id_rsa" }
    - { src: "PV-minute.sh", dest: "/usr/local/bin/PV-minute.sh" }
    - { src: "org.asamk.Signal.conf", dest: "/etc/dbus-1/system.d/org.asamk.Signal.conf" }
    - { src: "org.asamk.Signal.service", dest: "/usr/share/dbus-1/system-services/org.asamk.Signal.service" }
    - { src: "signal.service", dest: "/etc/systemd/system/signal.service" }
    - { src: "32_SiSi.pm", dest: "/opt/fhem/FHEM/32_SiSi.pm" }
    - { src: "50_Signalbot.pm", dest: "/opt/fhem/FHEM/50_Signalbot.pm" }
    - { src: "99_myUtils.pm", dest: "/opt/fhem/FHEM/99_myUtils.pm" }

- name: ensure auto.nfs is sourced by auto.master
  lineinfile:
    dest: "/etc/auto.master"
    line: "/opt/automnt /etc/auto.nfs"

- name: ensure autofs starts at boot and is restarted
  systemd:
    name: autofs
    daemon_reload: yes
    state: restarted
    enabled: yes

- name: bootconf - no X to start
  lineinfile:
    dest: "/boot/config.txt"
    regexp: "^start_x"
    line: "start_x=0"

- name: bootconf - 16M for gpu
  lineinfile:
    dest: "/boot/config.txt"
    regexp: "^gpu_mem"
    line: "gpu_mem=16"

- name: bootconf - enable SPI
  lineinfile:
    dest: "/boot/config.txt"
    regexp: "^dtparam=spi"
    line: "dtparam=spi=on"

- name: bootconf - I2C on
  lineinfile:
    dest: "/boot/config.txt"
    regexp: "^dtparam=i2c"
    line: "dtparam=i2c_arm=on"

- name: bootconf - modules to load i2c-gpio
  lineinfile:
    dest: "/etc/modules"
    line: "i2c-gpio"

- name: bootconf - modules to load i2c-dev
  lineinfile:
    dest: "/etc/modules"
    line: "i2c-dev"

- name: owserver - no fake devices, only real on i2c
  lineinfile:
    dest: "/etc/owfs.conf"
    regexp: "^server: "
    line: "server: device = /dev/i2c-1"

- name: owserver ensure mointpoint
  lineinfile:
    dest: "/etc/owfs.conf"
    regexp: "^mountpoint="
    line: "mountpoint=/mnt/1wire"

- name: restart owfs
  service: 
    name: owserver.service
    state: restarted
    enabled: yes

- name: restart owfs-ftp
  service: 
    name: owftpd.service
    state: restarted
    enabled: yes

- name: restart owfs-http
  service: 
    name: owhttpd.service
    state: restarted
    enabled: yes

- name: download fhem
  get_url:
    url: https://fhem.de/{{ FHEM_DEB }}.deb
    dest: /home/fhem/

- name: link various directories for mount
  file:
    src: "{{ item.path }}"
    dest: "{{ item.link }}"
    state: link
    owner: fhem
    group: fhem
    mode: 0755
    force: yes
  with_items:
    - { path: "/opt/automnt/nfs/fhem", link: "/opt/fhem/log" }
    - { path: "/opt/automnt/nfs/fhem/store", link: "/opt/fhem/store" }
    - { path: "/opt/fhem/log", link: "/var/log/fhem" }
    - { path: "/opt/fhem/contrib/DoorPi/70_DoorPi.pm", link: "/opt/fhem/FHEM/70_DoorPi.pm" }
    - { path: "/opt/fhem/contrib/WebViewControl/95_WebViewControl.pm", link: "/opt/fhem/FHEM/95_WebViewControl.pm" }
    - { path: "/opt/fhem/contrib/WebViewControl/www/pgm2/cordova-2.3.0.js", link: "/opt/fhem/www/pgm2/cordova-2.3.0.js" }
    - { path: "/opt/fhem/contrib/WebViewControl/www/pgm2/webviewcontrol.css", link: "/opt/fhem/www/pgm2/webviewcontrol.css" }
    - { path: "/opt/fhem/contrib/WebViewControl/www/pgm2/webviewcontrol.js", link: "/opt/fhem/www/pgm2/webviewcontrol.js" }
    - { path: "/opt/fhem/contrib/WebViewControl/www/images/default/batteryIconSprite.png", link: "/opt/fhem/www/images/default/batteryIconSprite.png" }
    - { path: "/opt/fhem/contrib/WebViewControl/www/images/default/mic_sprite.png", link: "/opt/fhem/www/images/default/mic_sprite.png" }
    - { path: "/opt/fhem/contrib/WebViewControl/www/images/default/onlineIconSprite.png", link: "/opt/fhem/www/images/default/onlineIconSprite.png" }

- name: install downloaded fhem
  apt:
    deb: "/home/fhem/{{ FHEM_DEB }}.deb"

## Update fhem here
#- name: update fresh fhem installtion
#  command: /opt/fhem/fhem.pl update

- name: copy fhem-configs
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: fhem
    group: fhem
    force: yes
  with_items:
    - { src: 'fhem/', dest: '/opt/fhem/' }

- name: Enhance sorttable.js timing-wise
  lineinfile:
    dest: "/opt/fhem/www/pgm2/fhemweb_readingsGroup.js"
    regexp: "        ., 100 .;"
    line: "        }, 1000 );"

- name: download signal-cli
  get_url:
    url: https://github.com/AsamK/signal-cli/releases/download/v{{ SIGNAL_CLI_VERSION}}/signal-cli-{{ SIGNAL_CLI_VERSION }}.tar.gz
    dest: /home/fhem/

- name: unpack signal-cli to /opt
  unarchive:
    src: /home/fhem/signal-cli-{{ SIGNAL_CLI_VERSION }}.tar.gz
    dest: /opt
    remote_src: yes

- name: download libzkgroup.so for arm/raspi
  get_url:
    url: https://svn.fhem.de/fhem/trunk/fhem/thirdparty/signallibs_armv7l/libzkgroup.so
    dest: /opt/signal-cli-{{ SIGNAL_CLI_VERSION }}/lib/

- name: download libsignal_jni.so for arm/raspi
  get_url:
    url: https://svn.fhem.de/fhem/trunk/fhem/thirdparty/signallibs_armv7l/libsignal_jni.so
    dest: /opt/signal-cli-{{ SIGNAL_CLI_VERSION }}/lib/

- name: shell to update arm-libs inside signal jar
  command: /opt/fhem/fhem/upd_signal_libs.sh "{{ SIGNAL_CLI_VERSION }}"

- name: link signal-cli to /usr/local/bin
  file:
    src: /opt/signal-cli-{{ SIGNAL_CLI_VERSION }}/bin/signal-cli
    dest: /usr/local/bin/signal-cli
    state: link

- name: Copy signal config
  copy:
    src: signal/.local/
    dest: /home/fhem/.local
    owner: fhem
    group: fhem

- name: setup cronjobs
  cron:
    name: "PV-minute - feed PV data into fhem db every minute"
    cron_file: pvminute
    user: root
    job: "if [ -x /usr/local/bin/PV-minute.sh ]; then /usr/local/bin/PV-minute.sh >/dev/null; fi"

- name: Enable fhem service
  service:
    name: fhem
    state: restarted
    enabled: yes
  tags:
    - fhem

- name: setup watchdog config
  lineinfile:
    dest: "/etc/watchdog.conf"
    line: "watchdog-device = /dev/watchdog"

- name: setup watchdog config
  lineinfile:
    dest: "/etc/watchdog.conf"
    line: "file = /opt/fhem/log/fhem.save"

- name: setup watchdog config
  lineinfile:
    dest: "/etc/watchdog.conf"
    line: "change = 5000"

- name: setup watchdog config
  lineinfile:
    dest: "/etc/watchdog.conf"
    line: "watchdog-timeout = 10"

- name: stop pi hardware-watchdog
  service:
    name: watchdog
    enabled: yes
    state: stopped

- name: start pi hardware-watchdog
  service:
    name: watchdog
    enabled: yes
    state: started

- name: initial start hints
  debug:
    msg: "do a fhem-update, check all devices, reset tracker- and umatrix-blocking for gecius.de"
